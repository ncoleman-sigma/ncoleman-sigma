# This is a basic workflow to help you get started with Actions

name: Version Tagging CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:
      - '.github/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  call_vt_api:
    
    name: Version Tagging API Job
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Which File Changed
        id: which_file_changed
        run: |
          last_commit_hash=$(git log -1 --pretty="format:%H")
          file_name=$(git diff-tree --no-commit-id --name-only -r $last_commit_hash)
          echo -n "file_name_var=$file_name" >> $GITHUB_OUTPUT
          
      - name: Set Environment Variables
        id: set_env_vars_aws
        run: |
          echo "api_url=https://api.sigmacomputing.com" >> $GITHUB_ENV
          echo "client_id=f6a3ad0a74fe6a4880eb88a1c4729df26f689e1ec58b8ec5ee4a848af558bd40" >> $GITHUB_ENV
          echo "api_token=6a961958dcb8a89b77c5dd926b69fc411777c854c55dad47b33081c8fddadf1a496460907ac7dc06725c6f5adb158ef8048a1701fe82a2645725eebf5c54907e" >> $GITHUB_ENV

      - name: Auth Token Call
        id: auth_token_call
        run: |
          token_base64=`echo -n $(curl -X POST ${{ env.api_url }}/v2/auth/token --header 'Content-Type=application/x-www-form-urlencoded' --data-urlencode 'grant_type=client_credentials' --data-urlencode 'client_id=${{ env.client_id }}' --data-urlencode 'client_secret=${{ env.api_token }}') | jq -c '.access_token'`
          echo -n "access_token=$token_base64" >> $GITHUB_OUTPUT

      - id: read_json_file
        run: |
          content=`cat ${{ steps.which_file_changed.outputs.file_name_var }}`
          content="${content//$'\n'/' '}"
          echo -n "json_var=$content" >> $GITHUB_OUTPUT
      
      - name: Version Tagging API Call
        run: |
          test=$(curl -X POST ${{ env.api_url }}/v2/workbooks/tag --header 'Content-Type: application/json' --header "Authorization: Bearer ${{ steps.auth_token_call.outputs.access_token }}" --data '${{ steps.read_json_file.outputs.json_var }}')
          echo $test
